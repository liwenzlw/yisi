/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2016-09-02 16:17:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class editArticle_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	String basepath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
			+ request.getContextPath() + "/";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div style=\"display: inline-block;\">\r\n");
      out.write("\t<table id=\"jqGrid\"></table>\r\n");
      out.write("\t<div id=\"jqGridPager\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- jqgrid start -->\r\n");
      out.write("\r\n");
      out.write("<!-- We support more than 40 localizations -->\r\n");
      out.write("<script type=\"text/ecmascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(basepath);
      out.write("vender/jqGrid/js/i18n/grid.locale-en.js\"></script>\r\n");
      out.write("<!-- This is the Javascript file of jqGrid -->\r\n");
      out.write("<script type=\"text/ecmascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(basepath);
      out.write("vender/jqGrid/js/jquery.jqGrid.min.js\"></script>\r\n");
      out.write("<!-- The link to the CSS that the grid needs -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\"\r\n");
      out.write("\thref=\"");
      out.print(basepath);
      out.write("vender/jqGrid/css/ui.jqgrid-bootstrap.css\" />\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    $.jgrid.defaults.width = 900;\r\n");
      out.write("    $.jgrid.defaults.responsive = true;\r\n");
      out.write("    $.jgrid.defaults.styleUI = 'Bootstrap';\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("    $(document).ready(function () {\r\n");
      out.write("        $(\"#jqGrid\").jqGrid({\r\n");
      out.write("            url: '");
      out.print(basepath);
      out.write("foodArticle/queryArticleByPage',\r\n");
      out.write("            mtype: \"POST\",\r\n");
      out.write("            datatype: \"json\",\r\n");
      out.write("            colModel: [\r\n");
      out.write("                {\r\n");
      out.write("                    label: '编号', name: 'id', key: true, width: 75, editable: true, editrules: {required: true}\r\n");
      out.write("                },\r\n");
      out.write("                {label: '文章标题', name: 'title', width: 150, editable: true},\r\n");
      out.write("                {label: '类型', name: 'type', width: 150, editable: true},\r\n");
      out.write("                {label: '审核', name: 'audit', width: 150, editable: true},\r\n");
      out.write("                {\r\n");
      out.write("                    label: '图标', name: 'iconAddress', width: 150, editable: true, edittype: 'image',\r\n");
      out.write("                    editoptions: {\r\n");
      out.write("                        dataInit: function (elem) {\r\n");
      out.write("                            console.log(\"elem:\");\r\n");
      out.write("                            console.log(elem);\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                {label: '上传时间', name: 'uploadTime', width: 150},\r\n");
      out.write("                {label: '最近修改时间', name: 'updateTime', width: 150},\r\n");
      out.write("                {label: '审核时间', name: 'auditTime', width: 150},\r\n");
      out.write("               /* {label: 'Article Content', name: 'articleContent', width: 150, editable: true}*/\r\n");
      out.write("            ],\r\n");
      out.write("            sortname: 'id',\r\n");
      out.write("            sortorder: 'asc',\r\n");
      out.write("            viewrecords: true,\r\n");
      out.write("            height: 250,\r\n");
      out.write("            rowNum: 20,\r\n");
      out.write("            pager: \"#jqGridPager\"\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        $('#jqGrid').navGrid('#jqGridPager',\r\n");
      out.write("                // the buttons to appear on the toolbar of the grid\r\n");
      out.write("                {\r\n");
      out.write("                    edit: true,\r\n");
      out.write("                    add: true,\r\n");
      out.write("                    del: true,\r\n");
      out.write("                    search: false,\r\n");
      out.write("                    refresh: false,\r\n");
      out.write("                    view: false,\r\n");
      out.write("                    position: \"left\",\r\n");
      out.write("                    cloneToTop: false\r\n");
      out.write("                },\r\n");
      out.write("                // options for the Edit Dialog\r\n");
      out.write("                {\r\n");
      out.write("                    editCaption: \"The Edit Dialog\",\r\n");
      out.write("                    recreateForm: true,\r\n");
      out.write("                    checkOnUpdate: true,\r\n");
      out.write("                    checkOnSubmit: true,\r\n");
      out.write("                    closeAfterEdit: true,\r\n");
      out.write("                    errorTextFormat: function (data) {\r\n");
      out.write("                        return 'Error: ' + data.responseText\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                // options for the Add Dialog\r\n");
      out.write("                {\r\n");
      out.write("                    closeAfterAdd: true,\r\n");
      out.write("                    recreateForm: true,\r\n");
      out.write("                    errorTextFormat: function (data) {\r\n");
      out.write("                        return 'Error: ' + data.responseText\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                // options for the Delete Dailog\r\n");
      out.write("                {\r\n");
      out.write("                    caption: \"确认删除\",\r\n");
      out.write("                    msg: \"是否确认删除文章?\",\r\n");
      out.write("                    bSubmit: \"删除\",\r\n");
      out.write("                    bCancel: \"取消\",\r\n");
      out.write("                    url : \"");
      out.print(basepath);
      out.write("foodArticle/queryArticleByPage\",\r\n");
      out.write("\t\t\tmtype : \"POST\",\r\n");
      out.write("\t\t\tdelData : {\r\n");
      out.write("\t\t\t\t_method : \"DELETE\"\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terrorTextFormat : function(data) {\r\n");
      out.write("\t\t\t\treturn 'Error: ' + data.responseText\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("<!-- jqgrid end -->\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
